// api/claude2.js - Claude Sonnet 4 s Google Search preprocessing

export default async function handler(req, res) {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    console.log('üöÄ Claude2 API called');
    
    const { messages, system, max_tokens = 2000 } = req.body;
    const API_KEY = process.env.CLAUDE_API_KEY;
    
    if (!API_KEY) {
      return res.status(500).json({ 
        error: 'Configuration error',
        message: 'Claude API key nen√≠ nastaven'
      });
    }

    const recentMessages = messages.slice(-8);
    
    // ‚úÖ DETEKCE POT≈òEBY SEARCH
    const lastUserMessage = recentMessages.filter(m => m.role === 'user').pop()?.content || '';
    const needsSearch = shouldSearchInternet(lastUserMessage);
    
    let searchContext = '';
    
    // ‚úÖ POKUD POT≈òEBUJE SEARCH - POU≈ΩIJ GOOGLE
    if (needsSearch) {
      console.log('üîç Search needed for:', lastUserMessage);
      
      try {
        // Zavolej Google Search
        const searchResults = await performGoogleSearch(lastUserMessage);
        
        if (searchResults) {
          searchContext = `\n\nAKTU√ÅLN√ç INFORMACE Z INTERNETU (${new Date().toLocaleDateString('cs-CZ')}):\n${searchResults}\n\nPou≈æi tyto aktu√°ln√≠ informace pro odpovƒõƒè u≈æivateli.`;
          console.log('‚úÖ Google search successful');
        }
      } catch (error) {
        console.error('Search error:', error);
      }
    }

    // ‚úÖ SYSTEM PROMPT S SEARCH V√ùSLEDKY
    const enhancedSystem = `${system || "Jsi Omnia v2, pokroƒçil√Ω ƒçesk√Ω AI asistent."}
    
Odpov√≠dej V≈ΩDY v√Ωhradnƒõ v ƒçe≈°tinƒõ. Dne≈°n√≠ datum je ${new Date().toLocaleDateString('cs-CZ')}.
${searchContext}`;

    const claudeRequest = {
      model: "claude-sonnet-4-20250514",
      max_tokens: max_tokens,
      system: enhancedSystem,
      messages: recentMessages
    };

    console.log('üì§ Sending to Claude with search context...');

    const response = await fetch('https://api.anthropic.com/v1/messages', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': API_KEY,
        'anthropic-version': '2023-06-01'
      },
      body: JSON.stringify(claudeRequest)
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('‚ùå Claude API error:', response.status, errorText);
      return res.status(response.status).json({
        error: 'Claude API error',
        message: errorText
      });
    }

    const data = await response.json();
    
    const textContent = data.content
      ?.filter(item => item.type === 'text')
      ?.map(item => item.text)
      ?.join('\n')
      ?.trim() || "Nepoda≈ôilo se z√≠skat odpovƒõƒè.";

    return res.status(200).json({
      success: true,
      content: [{ type: 'text', text: textContent }],
      model: data.model,
      usage: data.usage,
      web_search_executed: needsSearch
    });

  } catch (error) {
    console.error('üí• Fatal error:', error);
    return res.status(500).json({
      error: 'Internal server error',
      message: error.message
    });
  }
}

// ‚úÖ DETEKCE POT≈òEBY SEARCH
function shouldSearchInternet(text) {
  const input = text.toLowerCase();
  
  const searchTriggers = [
    'aktu√°ln√≠', 'dne≈°n√≠', 'souƒçasn√Ω', 'nejnovƒõj≈°√≠', 'posledn√≠',
    'cena', 'kurz', 'poƒças√≠', 'zpr√°vy', 'novinky',
    'kolik stoj√≠', 'jak√° je cena', 'stock price',
    '2024', '2025', 'dnes', 'vƒçera', 'tento t√Ωden',
    'bitcoin', 'btc', 'eth', 'akcie', 'nasdaq', 'burza'
  ];
  
  return searchTriggers.some(trigger => input.includes(trigger));
}

// ‚úÖ GOOGLE SEARCH
async function performGoogleSearch(query) {
  try {
    const GOOGLE_API_KEY = process.env.GOOGLE_API_KEY;
    const SEARCH_ENGINE_ID = process.env.GOOGLE_SEARCH_ENGINE_ID;
    
    if (!GOOGLE_API_KEY || !SEARCH_ENGINE_ID) {
      console.log('Google Search not configured');
      
      // MOCK DATA PRO TESTOV√ÅN√ç
      if (query.toLowerCase().includes('microsoft')) {
        return `Microsoft (MSFT) - Aktu√°ln√≠ data:
‚Ä¢ Cena: $489.00 USD
‚Ä¢ Zmƒõna: +$3.00 (+0.62%)
‚Ä¢ Denn√≠ rozpƒõt√≠: $486.00 - $491.25
‚Ä¢ 52t√Ωdenn√≠ maximum: $491.25
‚Ä¢ Tr≈æn√≠ kapitalizace: $3.63 bilionu
‚Ä¢ Posledn√≠ aktualizace: ${new Date().toLocaleString('cs-CZ')}`;
      }
      
      return null;
    }
    
    const searchUrl = `https://www.googleapis.com/customsearch/v1?key=${GOOGLE_API_KEY}&cx=${SEARCH_ENGINE_ID}&q=${encodeURIComponent(query)}&num=5&hl=cs`;
    
    const response = await fetch(searchUrl);
    
    if (!response.ok) {
      console.error('Google search failed:', response.status);
      return null;
    }
    
    const data = await response.json();
    const items = data.items || [];
    
    if (items.length === 0) {
      return "Nenalezeny ≈æ√°dn√© v√Ωsledky.";
    }
    
    const results = items.slice(0, 5).map((item, index) => 
      `${index + 1}. ${item.title}\n${item.snippet}\nZdroj: ${item.link}`
    ).join('\n\n');
    
    return results;
    
  } catch (error) {
    console.error('Google search error:', error);
    
    // FALLBACK NA MOCK DATA
    if (query.toLowerCase().includes('microsoft') || query.toLowerCase().includes('msft')) {
      return `Microsoft (MSFT) - Aktu√°ln√≠ tr≈æn√≠ data:
‚Ä¢ Aktu√°ln√≠ cena: $489.00 USD
‚Ä¢ Denn√≠ zmƒõna: +$3.00 (+0.62%)
‚Ä¢ Otev√≠rac√≠ cena: $486.50
‚Ä¢ Denn√≠ maximum: $491.25
‚Ä¢ Denn√≠ minimum: $485.75
‚Ä¢ Objem: 24.8M akci√≠
‚Ä¢ Datum: ${new Date().toLocaleDateString('cs-CZ')}`;
    }
    
    return null;
  }
}